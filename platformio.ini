; PlatformIO Project Configuration File

;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting

; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = espressif8266@3.2.0
board = esp8285
board_build.ldscript = eagle.flash.1m144.ld
framework = arduino
upload_speed = 921600
monitor_speed = 460800
board_build.f_cpu = 160000000L
build_flags = -Wall -Iinclude
lib_deps =
	ottowinter/ESPAsyncWebServer-esphome @ ^2.0.1
extra_scripts =
	pre:python/build_flags.py
	pre:python/build_html.py

[env:Tx_Backpack]
build_flags =
	${env.build_flags}
	-D PLATFORM_ESP8266=1
	-D TARGET_TX_BACKPACK
	-D PIN_BUTTON=0
	-D PIN_LED=16
src_filter = +<*> -<Vrx_main.cpp> -<rapidfire.*> -<rx5808.*> -<steadyview.*>

[env:Namimno_Tx_Backpack]
build_flags =
	${env.build_flags}
	-D PLATFORM_ESP8266=1
	-D TARGET_TX_BACKPACK
	-D NAMIMNO_TX_BACKPACK
	-D PIN_BUTTON=0
	-D PIN_LED=16
extra_scripts =
	${env.extra_scripts}
	pre:rename_bin.py
src_filter = +<*> -<Vrx_main.cpp> -<rapidfire.*> -<rx5808.*> -<steadyview.*>

[env:FrSky_Tx_Backpack]
extends = env:Namimno_Tx_Backpack
build_flags =
	${env.build_flags}
	-D PLATFORM_ESP8266=1
	-D TARGET_TX_BACKPACK
	-D NAMIMNO_TX_BACKPACK
	-D PIN_BUTTON=0
	-D PIN_LED=16

[env:DEBUG_Tx_Backpack]
extends = env:FrSky_Tx_Backpack
build_flags =
	${env:FrSky_Tx_Backpack.build_flags}
	-D LOGGING_UART=Serial1
	-D DEBUG_LOG
	-D DEBUG_ELRS_WIFI

[env:Rapidfire_ESP01F_Backpack]
build_flags =
	${env.build_flags}
	-D PLATFORM_ESP8266=1
	-D RAPIDFIRE_BACKPACK
	-D TARGET_VRX_BACKPACK
	-D PIN_BUTTON=0
	-D PIN_LED=16
	-D PIN_MOSI=13
	-D PIN_CLK=14
	-D PIN_CS=15
src_filter = +<*> -<Tx_main.cpp>

[env:Rapidfire_ESP_RX_Backpack]
build_flags =
	${env.build_flags}
	-D PLATFORM_ESP8266=1
	-D RAPIDFIRE_BACKPACK
	-D TARGET_VRX_BACKPACK
	-D PIN_LED=16
	; TX pin (GPIO1) has a pullup on some receivers
	; This MUST be connected to CS or it wont work
	; The RX and BOOT pins can be used for either DATA or CLK without issue
	-D PIN_MOSI=3
	-D PIN_CLK=0
	-D PIN_CS=1
src_filter = +<*> -<Tx_main.cpp>

[env:RX5808_ESP_RX_Backpack]
build_flags =
	${env.build_flags}
	-D PLATFORM_ESP8266=1
	-D RX5808_BACKPACK
	-D TARGET_VRX_BACKPACK
	-D PIN_LED=16	;Standard ELRS LED pin
	-D PIN_MOSI=3	;RX pad
	-D PIN_CLK=0 	;Boot pad
	-D PIN_CS=1		;TX pad
src_filter = +<*> -<Tx_main.cpp>

[env:SteadyView_ESP_RX_Backpack]
build_flags =
	${env.build_flags}
	-D PLATFORM_ESP8266=1
	-D STEADYVIEW_BACKPACK
	-D TARGET_VRX_BACKPACK
	-D PIN_LED=16	;Standard ELRS LED pin
	-D PIN_MOSI=3	;RX pad
	-D PIN_CLK=0 	;Boot pad
	-D PIN_CS=1		;TX pad
src_filter = +<*> -<Tx_main.cpp>


[env:DEBUG_ESP_RX_Backpack]
build_flags =
	${env.build_flags}
	-D DEBUG_LOG
	-D PLATFORM_ESP8266=1
	-D STEADYVIEW_BACKPACK
	-D TARGET_VRX_BACKPACK
	-D PIN_LED=16	;Standard ELRS LED pin
	-D PIN_MOSI=12	;Some pad
	-D PIN_CLK=0 	;Boot pad
	-D PIN_CS=15	;Some other pad
src_filter = +<*> -<Tx_main.cpp>
